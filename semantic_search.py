# -*- coding: utf-8 -*-
"""Semantic_Search.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SPPwPa3PEaZiyJGLIIW5dF1t7t4pwv0F
"""

from sentence_transformers import SentenceTransformer
from sklearn.metrics.pairwise import cosine_similarity
import numpy as np
# --- Step 1: Create a small product dataset ---
products = [
"Nike Running Shoes",
"Adidas Sneakers",
"Puma Sports T-shirt",
"Apple iPhone 14",
"Samsung Galaxy S23",
"Sony Headphones",
"Leviâ€™s Jeans",
"Under Armour Hoodie",
]
# --- Step 2: Load a small pre-trained embedding model ---
model = SentenceTransformer("all-MiniLM-L6-v2")
# --- Step 3: Convert product names into embeddings ---
product_embeddings = model.encode(products)
# --- Step 4: Define a search function ---
def semantic_search(query, top_k=3):
    # Encode the search query
    query_embedding = model.encode([query])

    # Compute cosine similarity
    similarities = cosine_similarity(query_embedding,
product_embeddings)[0]

    # Get top_k most similar products
    top_indices = np.argsort(similarities)[::-1][:top_k]

    print(f"\n Query: {query}\n")
    for idx in top_indices:
        print(f"{products[idx]}  (score: {similarities[idx]:.2f})")

# --- Step 5: Try searching ---
semantic_search("sports shoes")
semantic_search("latest iPhone")
semantic_search("warm hoodie")

